import java.util.*;

class Solution {
    public ArrayList<Integer> leafNodes(int[] preorder) {
        ArrayList<Integer> result = new ArrayList<>();
        int[] index = new int[1]; 
        findLeaves(preorder, index, Integer.MIN_VALUE, Integer.MAX_VALUE, result);
        return result;
    }

    private void findLeaves(int[] preorder, int[] index, int min, int max, ArrayList<Integer> result) {
        if (index[0] >= preorder.length)
            return;

        int val = preorder[index[0]];
        if (val < min || val > max)
            return;

        index[0]++; 
        int current = val;
        int prevIndex = index[0];
        findLeaves(preorder, index, min, current - 1, result);

        boolean hasLeft = index[0] > prevIndex;

        prevIndex = index[0];
        findLeaves(preorder, index, current + 1, max, result);

        boolean hasRight = index[0] > prevIndex;
        if (!hasLeft && !hasRight)
            result.add(current);
    }
}




Examples:

Input: preorder[] = [5, 2, 10]
Output: [2, 10]

Input: preorder[] = [4, 2, 1, 3, 6, 5]
Output: [1, 3, 5]
