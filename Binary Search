class Solution {
    public int binarysearch(int[] arr, int k) {
        // Code Here
        int l=0;
        int r=arr.length-1;
        int mid,result=-1;
        while(l<=r)
        {
            mid = l + (r - l) / 2;

            if(arr[mid]==k)
            {
                result= mid;
                r=mid-1;
            }
            else if(arr[mid]<k){
                l=mid+1;
            }
            else
            {
                r=mid-1;
            }
        }
        return result;
    }
}


Examples:

Input: arr[] = [1, 2, 3, 4, 5], k = 4
Output: 3
Explanation: 4 appears at index 3.
Input: arr[] = [11, 22, 33, 44, 55], k = 445
Output: -1
Explanation: 445 is not present.
Input: arr[] = [1, 1, 1, 1, 2], k = 1
Output: 0
Explanation: 1 appears at index 0.

For Input : 
3
1 1 1 2 2 3 3 3 3 3 3 4 4 4 5 5 5
 Correct output is: 
5
